#include<iostream>
using namespace std;
#include<vector>
#include<string>
#include<deque>
#include<algorithm>
#include<ctime>
/*案例：
有5名选手：选手ABCDE，10个评委分别对每一名，去除最高分，去除最低分，取平均分

步骤：
1、创建5名选手，放到vector容器中
2、遍历vector容器，去除每一个选手，执行for循环，可以把10可评委打分存到deque容器中（放入deque容器的目的是方便去除最高分和最低分）。
3、sort算法对deque容器中分数排序，去除最高和最低分
4、deque容器遍历一遍，累加总分
5、获取平均分
*/

class Person
{
public:
	Person(string name,int score)
	{
		this->m_Name = name;
		this->m_Score = score;
	}

	string m_Name;
	int m_Score;

};

void Creat(vector<Person>&v)
{
	string NameSeed = "ABCDE";
	for (int i = 0; i < 5; i++)
	{
		string name = "选手";
		name += NameSeed[i];//字符串的拼接

		int score = 0;
		Person p(name, score);

		//将创建的Person对象放入容器中
		v.push_back(p);


	}
}


//评委打分
void SetScore(vector<Person>&v)
{
	//此处遍历是为了给每个人赋值
	for (vector<Person>::iterator it = v.begin(); it != v.end(); it++)//遍历deque容器有两种方法
	{
		//将评委的分数放入 deque容器中
		deque<int>d;
		
		for (int i = 0; i < 10; i++)
		{
			int score = rand() % 41 + 60;//60 ― 100分
			d.push_back(score);
		}
		//排序
		sort(d.begin(), d.end());

		//去除最高和最低分
		d.pop_back();
		d.pop_front();

		//取平均分
		int score = 0;

		for (int i = 0; i < d.size(); i++)
		{
			score += d[i];
		}
		int avarage = score / d.size();
		it->m_Score = avarage;

		cout << "选手" << it->m_Name << "的分数为：" ;
		for (deque<int>::iterator it = d.begin(); it != d.end(); it++)
		{
			cout << *it << " ";
		}
		cout << endl;
		cout << "选手"<<it->m_Name<<"的平均分为：" << avarage << endl;

	}

}

void ShowScore(vector<Person>&p)
{
	for (vector<Person>::iterator it = p.begin(); it != p.end(); it++)
	{
		cout << "姓名：" << it->m_Name << "  平均分：" << it->m_Score << endl;
	}
}


int main()
{
	//添加随机数种子
	srand((unsigned)time(NULL));


	//创建5名选手
	vector<Person>v;
	Creat(v);

	////测试
	//for (vector<Person>::iterator it = v.begin(); it != v.end(); it++)
	//{
	//	cout << "姓名：" << (*it).m_Name << "  分数：" << (*it).m_Score << endl;
	//}

	//评委打分
	SetScore(v);

	//显示最后得分
	ShowScore(v);

	system("pause");

	return 0;
}