#include<iostream>
using namespace std;
#include<string>
	//结构体属于用户自定义的数据类型，允许用户存储不同的数据
	//系统自带的数据类型有：整型、字符型等
		
//1、创建学生数据类型  学生包括（姓名、年龄、分数）
//自定义数据类型就是一些类型集合组成的一个类型
//语法：   struct   结构体名  {结构体成员列表};
struct student
{
	//成员列表

	//姓名
	string name;
	//年龄
	int age;
	//分数
	int score;
}s3;  //2.3 在定义结构体时顺便创建结构体变量  

//2、通过学生类型创建具体学生

//2.1 struct student s1
//2.2 struct student s2={成员1.成员2...}
//2.3 在定义结构体时顺便创建结构体变量

int main()
{
	//2.1 struct student s1
	//结构体创建时关键字struct可以不写
	struct student s1;  //struct student是数据类型  s1是变量名
	//给s1属性赋值，通过 .  访问结构体变量中的属性
	s1.name="张三";
	s1.age=18;
	s1.score=100;        

	cout<<"姓名："<<s1.name <<" 年龄:"<<s1.age <<" 分数："<<s1.score<<endl;
	
	//2.2 struct student s2={成员1.成员2...}
	struct student s2={"李四",19,80};//struct可省略

	cout<<"姓名："<<s2.name <<" 年龄:"<<s2.age <<" 分数："<<s2.score<<endl;

	//2.3 在定义结构体时顺便创建结构体变量（见前面） 不常用
	s3.name="王五";
	s3.age=20;
	s3.score=90;

	cout<<"姓名："<<s3.name <<" 年龄:"<<s3.age <<" 分数："<<s3.score<<endl;

	system("pause");
	
	return 0;
}
	