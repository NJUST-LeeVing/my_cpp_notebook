#include<iostream>
using namespace std;

//对象的初始化和清理
//1、构造函数 进行初始化操作
class person
{
public:
	//1.1、构造函数：
	//没有返回值，不用写void
	//函数名 与 类名相同
	//构造函数可以有参数，可以发生重载
	//创建对象的时候，构造函数会自动调用，且只调用一次
	person()
	{
		cout<<"person的构造函数的调用"<<endl;
	}
	//2、析构函数 进行清理操作
	//没有返回值，不写void
	//函数名和类相同 在名称前加~
	//析构函数不可以有参数，不可以发生重载
	//对象在销毁前会调用析构函数，而且只会调用一次
	~person()
	{
		cout<<"person的析构欧函数的调用"<<endl;
	}
};

//构造函数和析构函数必须有实现，如果不提供，编译器会提供一个空实现的构造和析构
void test01()
{
	person p;//构造函数不用写()，不用人为调动。由编译器自动调用
	//局部变量p是栈上的数据，test01执行完毕后，释放这个对象
}
int main()
{
	test01();
	system("pause");
	return 0;
}