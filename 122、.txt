#include<iostream>
using namespace std;
#include<string>
class WokerManager
{
public:
	//构造函数
	WokerManager()
	{}

	//展示菜单
	void ShowMenu()
	{
		cout << "********************************************" << endl;
		cout << "*********  欢迎使用职工管理系统！ **********" << endl;
		cout << "*************  0.退出管理程序  *************" << endl;
		cout << "*************  1.增加职工信息  *************" << endl;
		cout << "*************  2.显示职工信息  *************" << endl;
		cout << "*************  3.删除离职职工  *************" << endl;
		cout << "*************  4.修改职工信息  *************" << endl;
		cout << "*************  5.查找职工信息  *************" << endl;
		cout << "*************  6.按照编号排序  *************" << endl;
		cout << "*************  7.清空所有文档  *************" << endl;
		cout << "********************************************" << endl;
		cout << endl;
	}

	//退出功能
	void ExitSystem()
	{
		cout<<"欢迎下次使用！"<<endl;
		system("pause");
		exit(0);//退出程序
	}


	//析构函数
	~WokerManager()
	{}
};


//职工抽象类
class Worker
{
public:
	//显示个人信息
	virtual void ShowInformation()=0;
	//获取岗位名称
	virtual string GetDepartment()=0;
	//职工编号
	int m_Id;
	//职工姓名
	string m_Name;
	//部门编号
	int m_Department;
};

//普通职工类
class Employee:public Worker
{
public:
	//构造函数
	Employee(int id,string name,int department)
	{
		this->m_Id=id;
		this->m_Name=name;
		this->m_Department=department;
	
	}
	//显示个人信息
	virtual void ShowInformation()
	{
		cout<<"职工编号："<<this->m_Id
			<<"\t职工姓名："<<this->m_Name
			<<"\t部门编号："<<this->m_Department
			<<"\t岗位："<<this->GetDepartment()
			<<"岗位职责：完成经理交代的任务。"<<endl;
	}
	//获取岗位名称
	virtual string GetDepartment()
	{
		return string("普通员工");
	}
	
};

//经理类
class Manager:public Worker
{
public:
	//构造函数
	Manager(int id,string name,int department)
	{
		this->m_Id=id;
		this->m_Name=name;
		this->m_Department=department;
	
	}
	//显示个人信息
	virtual void ShowInformation()
	{
		cout<<"职工编号："<<this->m_Id
			<<"\t职工姓名："<<this->m_Name
			<<"\t部门编号："<<this->m_Department
			<<"\t岗位："<<this->GetDepartment()
			<<"岗位职责：完成老板交代的任务，并下发给员工。"<<endl;
	}
	//获取岗位名称
	virtual string GetDepartment()
	{
		return string("经理");
	}
	
};

//老板类
class Boss:public Worker
{
public:
	//构造函数
	Boss(int id,string name,int department)
	{
		this->m_Id=id;
		this->m_Name=name;
		this->m_Department=department;
	
	}
	//显示个人信息
	virtual void ShowInformation()
	{
		cout<<"职工编号："<<this->m_Id
			<<"\t职工姓名："<<this->m_Name
			<<"\t部门编号："<<this->m_Department
			<<"\t岗位："<<this->GetDepartment()
			<<"岗位职责：统筹全局。"<<endl;
	}
	//获取岗位名称
	virtual string GetDepartment()
	{
		return string("老板");
	}
	
};

int main()
{
	//测试代码
	Worker *worker=NULL;
	worker=new Employee(1,"张三",1);
	worker->ShowInformation();
	delete worker;

	worker=new Manager(2,"王五",2);
	worker->ShowInformation();
	delete worker;

	worker=new Boss(3,"李文",3);
	worker->ShowInformation();
	delete worker;


	////实例化管理者对象
	//WokerManager wm;
	//int choice;

	//while(true)
	//{
	//	//调用展示菜单成员选择
	//	wm.ShowMenu();
	//	cout<<"请输入您的选项：";
	//	cin>>choice;

	//	switch(choice)
	//	{
	//	case 0://退出系统
	//		wm.ExitSystem();
	//		break;
	//	case 1://增加职工
	//		break;
	//	case 2://显示职工
	//		break;
	//	case 3://删除职工
	//		break;
	//	case 4://修改职工
	//		break;
	//	case 5://查找职工
	//		break;
	//	case 6://排序职工
	//		break;
	//	case 7://清空文档
	//		break;
	//	default:
	//		system("cls");
	//		break;
	//	}
	//
	//}
	system("pause");

	return 0;
}


/*
职工的分类为：普通员工、经理、老板
将三种职工抽象到一个类（Woeker）中，利用多态管理不同的职工
职工的属性是：职工编号、职工姓名、职工所在的部门编号
职工的行为是：岗位职责信息描述、获取岗位名称
*/