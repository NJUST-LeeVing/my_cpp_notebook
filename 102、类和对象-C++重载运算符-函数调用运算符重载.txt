#include<iostream>
using namespace std;
#include<string>

//函数调用运算符重载

//打印输出类
class MyPrint
{
public:

	//重载函数调用运算符
	void operator()(string test)
	{
		cout<<test<<endl;
	
	}
};

void MyPrint02(string test)
{
	cout<<test<<endl;
}

void test01()
{
	MyPrint myPrint;
	MyPrint02("你好");
	myPrint("Hello, world!");//由于使用起来很像函数的调用，因此也叫仿函数。
}

//仿函数很灵活，没有固定写法。而之前的运算符重载都有固定的写法。

//加法类
class MyAdd
{
public:
	int operator()(int num1,int num2)
	{
		return num1+num2;
	}
};

void test02()
{
	MyAdd myAdd;
	int ret=myAdd(100,200);
	cout<<"ret="<<ret<<endl;

	//匿名函数对象,特点是当前行执行完后立即被释放。
	cout<<MyAdd()(100,300)<<endl;//匿名对象重载仿函数
}

int main()
{
	//test01();
	test02();
	system("pause");

	return 0;
}