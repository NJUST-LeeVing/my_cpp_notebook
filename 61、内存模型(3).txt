#include<iostream>
using namespace std;

//栈区数据注意事项---不要返回局部变量的地址
//栈区的数据由编译器管理开辟和释放
int* func(int b)//形参也放在栈区
{
	int a=10;//局部变量：存放在栈区，栈区的数据在函数执行完后自动释放
	return &a;//返回局部变量的地址
}

int main()
{
	//接收func函数的返回值
	int*p=func(20);

	cout<<p<<endl;//第一次编译器防止误操作，顾没有出错
	cout<<p<<endl;//乱码，数据出错
	cout<<*p<<endl;
	cout<<*p<<endl;
	system("pause");

	return 0;
}
/*难点：为什么不能返回局部变量的地址，却能返回局部变量的值？
返回过程： 函数->寄存区->主函数
如果返回局部变量的值,如a=10;return a;将10返回寄存器，再返回主函数。主函数接收到数据10.同时a已经被释放。
而若返回指针，指针先被放入寄存器，在被主函数接收，同时a被释放，此时能输出a的地址（因为a的地址已经被主函数接收），但是不能访问a的内容，因为a已经被释放
*/