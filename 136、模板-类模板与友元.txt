#include<iostream>
using namespace std;
#include<string>

//全局函数的类内、类外实现
//类内实现：直接在类内声明友元即可（建议这种写法）
//类外实现：需要提前让编译器知道全局函数的存在

//步骤四：为了让编译器能提前认识到Person，因此需要先写Person的声明
//步骤五：因为Person是类模板，因此要创建模板
template<class T1,class T2>
class Person;

//步骤三：类外实现：必须将实现放在声明前面？
template<class T1, class T2>
void show02(Person<T1, T2>&p2)
{
	cout << "类外实现----姓名：" << p2.m_Name << "  年龄：" << p2.m_Age << endl;
}

template<class T1,class T2>
class Person
{
	////步骤一：全局函数在 类内 实现（简单、常用）
	//friend void show01(Person<T1, T2>&p1)//友元函数不属于类内
	//{
	//	cout << "姓名：" << p1.m_Name<<endl;
	//	cout << "年龄：" << p1.m_Age << endl;
	//}

	//步骤二：全局函数在类外实现
	friend void show02<>(Person<T1, T2>& p2);//由于类外的是一个模板函数的实现，因此这里需要添加一个“空模板”“<>”

public:
	Person(T1 name, T2 age)
	{
		this->m_Name = name;
		this->m_Age = age;
	}

private:
	T1 m_Name;
	T2 m_Age;

};

void test01()
{
	Person<string, int>p1("李文", 19);
	show02(p1);
}


int main()
{
	test01();
	
	system("pause");

	return 0;
}