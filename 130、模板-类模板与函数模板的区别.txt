#include<iostream>
using namespace std;
#include<string>

//类模板和函数模板的区别
template<class NameType, class AgeType = int>
class Person
{
public:
	//行为
	Person(NameType name, AgeType age)
	{
		m_Name = name;
		m_Age = age;
	}
	void Show()
	{
		cout << "姓名：" << this->m_Name << endl;
		cout << "年龄：" << this->m_Age << endl;
	}

	//属性
	NameType m_Name;
	AgeType m_Age;
};

//类模板没有自动类型推导的方式
void test01()
{
	//Person p1("孙悟空", 1000);//错误，类模板没有自动类型推导
	Person<string, int>p1("孙悟空", 1000);
	p1.Show();

}

void test02()
{
	Person<string>p2("猪八戒", 999);//类模板中的模板参数列表 可以指定默认参数
	p2.Show();
}

int main()
{
	test01();
	system("pause");

	return 0;
}