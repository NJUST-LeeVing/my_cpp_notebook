#include<iostream>
using namespace std;
//C++编译器至少给一个类添加4个函数：
//默认构造函数
//默认析构函数
//默认拷贝构造函数
//赋值运算符operator，对属性进行值拷贝。（会出现浅拷贝的问题）


//赋值运算符重载
class Person
{
public:
	Person(int age)
	{
		m_Age = new int(age);
	}

	~Person()
	{
		if (m_Age != NULL)
		{
			delete m_Age;
			m_Age = NULL;
		}
	}

	//重载赋值运算符
	Person& operator=(Person& p)//为了进行链式编程。必须返回引用。
	{
		//编译器提供浅拷贝： m_Age=p.m_Age;

		//应该先判断*this是否有属性在堆区，如果有，先释放堆区的数据，然后进行深拷贝。
		
		//以下这一段代码有意义吗？
		//----------------------------------
		if (m_Age != NULL)
		{
			delete m_Age;
			m_Age = NULL;//为什么？
		}
		//----------------------------------

		//深拷贝
		m_Age = new int(*p.m_Age);
		return *this;

	}

	int* m_Age;
};

void test01()
{
	Person p1(18);

	Person p2(20);

	Person p3(30);

	p3 = p2 = p1;//赋值运算。

	cout << "p1的年龄为：" << *p1.m_Age << endl;

	cout << "p2的年龄为：" << *p2.m_Age << endl;

	cout << "p3的年龄为：" << *p3.m_Age << endl;
}

int main()
{
	test01();
	system("pause");

	return 0;
}