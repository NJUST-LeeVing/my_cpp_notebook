#include<iostream>
using namespace std;
#include<string>

class Building;
class GoodGay
{
public:
	GoodGay();

	void visit();//让visit函数可以访问Building中的私有成员
	void visit02();//让visit函数不能访问Building中的私有成员

	Building * building;
};
class Building
{
	//告诉编译器 GoodGay类下的visit成员函数可以作为Building类的好朋友，可以访问私有成员。
	friend void GoodGay::visit ();
public:
	Building();

public:
	string SittingRoom;

private:
	string BedRoom;
};

//类外实现成员函数
Building::Building ()
{
	SittingRoom="SittingRoom";

	BedRoom="BedRoom";
}
GoodGay::GoodGay ()
{
	building=new Building;
}

void GoodGay::visit ()
{
	cout<<"GoodGay1 is visiting your:"<<building->SittingRoom <<endl;
	cout<<"GoodGay1 is visiting your:"<<building->BedRoom  <<endl;
}
void GoodGay::visit02 ()
{
	cout<<"GoodGay2 is visiting your:"<<building->SittingRoom <<endl;
}

void test01()
{
	GoodGay gg;
	gg.visit ();
	gg.visit02 ();
}

int main()
{
	test01();
	system("pause");

	return 0;
}